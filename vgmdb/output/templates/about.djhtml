{% extends "base.djhtml" %}
{% block htmltitle %}
<title>VGMdb</title>
{% endblock %}
{% block title %}
    <h1>VGMdb API</h1>
{% endblock %}
{% block quickinfo %}
{% endblock %}
{% block body %}
<h2>What Is It?</h2>
<p>
VGMdb.net is an excellent resource, containing gigabytes of information about video game music. It documents the relationships between games, albums that represent games, and all the people that contributed to an album.
</p>
<p>
However, VGMdb does not provide an API to access its information, which provides an obstacle to programs that want to use its information. This site is a way to programmatically access the information on VGMdb.net. The web interface provides an easy way to explore this API and discover how the links work. Format selectors on the right will show any page in a different format.
</p>
<h2>API</h2>
<p>
All of the information that is parsed out of vgmdb.net is exposed through JSON. A subset of that information is also available in HTML+RDFa, RDF+XML, and Turtle. Send an HTTP Accept header to request a format, or append a ?format selector to the url.
</p>
<h3>Searching</h3>
<p>
Searching the database is easy. You can search for everything, or just a specific category. Keywords shorter than 3 characters are ignored.<br/>
<code><a href="search/vagran">/search/&lt;query&gt;</a></code> - Search for matching items<br/>
<code><a href="search?q=vagran">/search?q=&lt;query&gt;</a></code> - Search for matching items<br/>
<code><a href="search/albums/vagran">/search/albums/&lt;query&gt;</a></code> - Search for matching albums<br/>
<code><a href="search/albums?q=vagran">/search/albums?q=&lt;query&gt;</a></code> - Search for matching albums<br/>
<code><a href="search/artists/vagran">/search/artists/&lt;query&gt;</a></code> - Search for matching artists<br/>
<code><a href="search/artists?q=vagran">/search/artists?q=&lt;query&gt;</a></code> - Search for matching artists<br/>
<code><a href="search/orgs/vagran">/search/orgs/&lt;query&gt;</a></code> - Search for matching organizations<br/>
<code><a href="search/orgs?q=vagran">/search/orgs?q=&lt;query&gt;</a></code> - Search for matching organizations<br/>
<code><a href="search/products/vagran">/search/products/&lt;query&gt;</a></code> - Search for matching products<br/>
<code><a href="search/products?q=vagran">/search/products?q=&lt;query&gt;</a></code> - Search for matching products<br/>
</p>
<h3>Browse Lists</h3>
<p>
An index of all items in each category is also available.<br/>
<code><a href="albumlist/A">/albumlist/&lt;letter&gt;</a></code> - View all of the albums by letter<br/>
<code><a href="artistlist/A">/artistlist/&lt;letter&gt;</a></code> - View all of the artists by letter<br/>
<code><a href="orglist">/orglist</a></code> - View all of the organizations<br/>
<code><a href="orglist/A">/orglist/&lt;letter&gt;</a></code> - View all of the organizations by letter<br/>
<code><a href="eventlist">/eventlist</a></code> - View all of the events<br/>
<code><a href="eventlist/2001">/eventlist/&lt;year&gt;</a></code> - View all of the events by year<br/>
<code><a href="productlist/A">/productlist/&lt;letter&gt;</a></code> - View all of the products by letter<br/>
</p>
<h3>Information Pages</h3>
<p>
Each item in the database is represented with a unique URL, which follows this pattern:<br/>
<code><a href="album/79">/album/&lt;id&gt;</a></code> - Album information<br/>
<code><a href="artist/77">/artist/&lt;id&gt;</a></code> - Artist information<br/>
<code><a href="org/203">/org/&lt;id&gt;</a></code> - Organization information<br/>
<code><a href="event/2">/event/&lt;id&gt;</a></code> - Event information<br/>
<code><a href="product/1132">/product/&lt;id&gt;</a></code> - Product information<br/>
</p>
<h3>Seller Information</h3>
<p>
Artists and Albums have an additional endpoint to get information about a few online stores where their products are available. The main /sellers endpoint will wait until the information is completely available. The /sellers?allow_partial=true option may return results that are not yet complete, with a Refresh header to check back for new search results.<br/>
<code><a href="album/79/sellers">/album/&lt;id&gt;/sellers</a></code> - Album sellers<br/>
<code><a href="artist/77/sellers">/artist/&lt;id&gt;/sellers</a></code> - Artist sellers<br/>
<code><a href="album/79/sellers?allow_partial=true">/album/&lt;id&gt;/sellers?allow_partial=true</a></code> - Partial album sellers with Refresh header<br/>
<code><a href="artist/77/sellers?allow_partial=true">/artist/&lt;id&gt;/sellers?allow_partial=true</a></code> - Partial artist sellers with Refresh header<br/>
</p>
<h3>Format Selection</h3>
<p>
This webservice will honor HTTP Accept headers. It will also produce a specific format if a ?format=&lt;format&gt; option is added to the url.
<h5>HTTP Accept types</h5>
<code>text/html</code> - default HTML output<br/>
<code>application/json</code> - JSON output<br/>
<code>applications/rdf+xml</code> - RDF+XML output<br/>
<code>application/x-turtle</code> - Turtle output<br/>
<code>text/turtle</code> - Turtle output<br/>
<code>application/yaml</code> - YAML output<br/>
<code>application/x-yaml</code> - YAML output<br/>
<code>text/yaml</code> - YAML output<br/>
<code>text/x-yaml</code> - YAML output
<h5>Format Query String</h5>
<code><a href="album/79?format=html">html</a></code> - default HTML output<br/>
<code><a href="album/79?format=json">json</a></code> - JSON output<br/>
<code><a href="album/79?format=rdf">rdf</a></code> - RDF+XML output<br/>
<code><a href="album/79?format=turtle">turtle</a></code> - Turtle output<br/>
<code><a href="album/79?format=yaml">yaml</a></code> - YAML output<br/>
</p>
<h2>Open Source</h2>
<p>
The code is hosted at <a href="https://github.com/hufman/vgmdb">GitHub</a> for your pleasure.
</p>

{% endblock %}
